---
title: "HUNT 1-4: No change in PA"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

## Information

This script contains the analyses for all four HUNT surveys without considering change in LTPA. Through the analyses I have used own functions which is necessary for computing, see functions.qmd.

## Set environment and load packages

```{r setup, include=FALSE}

knitr::opts_chunk$set(
  message = FALSE,
  warning = FALSE,
  echo = TRUE
)
```

```{r}

library(tidyverse)
library(survival)
library(purrr)
library(patchwork)

theme_set(theme_minimal())
```

## HUNT 1 - Survival Analysis

### LTPA index variable

#### Process data

```{r}

hunt_1_cleaned_data_ltpa_index <- hunt_1_cleaned_full_data |> 
  process_hunt_1_no_change_index()
```


#### Visualizing LTPA index distribution

```{r}

h1 <- hunt_1_cleaned_data |> 
  ggplot(aes(x = ltpa_index)) +
  geom_histogram()

h2 <- hunt_1_cleaned_data |>
  filter(ltpa_index > 0) |> 
  ggplot(aes(x = ltpa_index)) +
  geom_histogram()

patchwork::wrap_plots(h1, h2)

hunt_1_cleaned_data |> 
  count(ltpa_index)
```

#### Run Cox models

Crude:

```{r}

hunt_1_cox_reg_crude_ltpa_index <- run_cox_reg_crude(hunt_1_cleaned_data_ltpa_index, strata = NULL)
```

Multi-adjusted:

```{r}

hunt_1_cox_reg_multi_ltpa_index <- run_cox_reg_multi(hunt_1_cleaned_data_ltpa_index, strata = NULL)
```

### Quasi-continuous variable (min/week)

#### Process data

```{r}

hunt_1_cleaned_data_cont_var <- hunt_1_cleaned_full_data |> 
  process_hunt_1_no_change_cont_var()
```

#### Visualizing distribution

```{r}

h1 <- hunt_1_cleaned_data_cont_var |> 
  ggplot(aes(x = pa_min_per_week)) +
  geom_histogram()

h2 <- hunt_1_cleaned_data_cont_var |>
  filter(pa_min_per_week > 0) |> 
  ggplot(aes(x = pa_min_per_week)) +
  geom_histogram()

patchwork::wrap_plots(h1, h2)

hunt_1_cleaned_data_cont_var |> 
  count(pa_min_per_week)

```

#### Run Cox models

Crude:

```{r}

hunt_1_cox_reg_crude_cont_var <- run_cox_reg_crude(hunt_1_cleaned_data_cont_var, strata = NULL, pa_var = "pa_min_per_week")
```

Multi-adjusted:

```{r}

hunt_1_cox_reg_multi_cont_var <- run_cox_reg_multi(hunt_1_cleaned_data_cont_var, strata = NULL, "pa_min_per_week")
```

## HUNT 2 - Survival Analysis

Due to the difference in how the LTPA questions are asked in HUNT 2, there are only model and that used a quasi-continuous variable (min/week).

### Quasi-continuous variable (min/week)

#### Process data

There are approx. 16 000 participants who lack a participation date and therefore follow-up time in HUNT 2. We compute a participation date for these individuals manually, see functions.qmd for more details. 

```{r}

hunt_2_cleaned_data_cont_var <- hunt_2_cleaned_full_data |> 
  process_hunt_2_no_change_cont_var()
```

#### Visualizing distribution

```{r}

h1 <- hunt_2_cleaned_data_cont_var |> 
  ggplot(aes(x = pa_min_per_week)) +
  geom_histogram()

h2 <- hunt_2_cleaned_data_cont_var |>
  filter(pa_min_per_week > 0) |> 
  ggplot(aes(x = pa_min_per_week)) +
  geom_histogram()

patchwork::wrap_plots(h1, h2)

hunt_2_cleaned_data_cont_var |> 
  count(pa_min_per_week)
```

#### Run Cox models

Crude:

```{r}

hunt_2_cox_reg_crude <- run_cox_reg_crude(hunt_2_cleaned_data_cont_var, strata = NULL, pa_var = "pa_min_per_week")
```

Multi-adjusted:

```{r}

hunt_2_cox_reg_multi <- run_cox_reg_multi(hunt_2_cleaned_data_cont_var, strata = NULL, pa_var = "pa_min_per_week")
```

## HUNT 3 - Survival Analysis

There are approx. 25 000 individuals who lack a participation date, these are computed manually. See "functions.qmd". 

### LTPA index variable

#### Process data

```{r}

hunt_3_cleaned_data_ltpa_index <- hunt_3_cleaned_full_data |> 
  process_hunt_3_no_change_index()
```

#### Visualizing distribution

```{r}

h1 <- hunt_3_cleaned_data_ltpa_index |> 
  ggplot(aes(x = ltpa_index)) +
  geom_histogram()

h2 <- hunt_3_cleaned_data_ltpa_index |>
  filter(ltpa_index > 0) |> 
  ggplot(aes(x = ltpa_index)) +
  geom_histogram()

patchwork::wrap_plots(h1, h2)

hunt_3_cleaned_data_ltpa_index |> 
  count(ltpa_index)
```

#### Run Cox models

Crude:

```{r}

hunt_3_cox_reg_crude_ltpa_index <- run_cox_reg_crude(
  hunt_3_cleaned_data_ltpa_index, 
  strata = NULL, 
  pa_var = "ltpa_index"
)
```

Multi-adjusted:

```{r}

hunt_3_cox_reg_multi_ltpa_index <- run_cox_reg_multi(
  hunt_3_cleaned_data_ltpa_index, 
  strata = NULL, 
  pa_var = "ltpa_index"
)
```

### Quasi-continuous variable

#### Process data

```{r}

hunt_3_cleaned_data_cont_var <- hunt_3_cleaned_full_data |> 
  process_hunt_3_no_change_cont_var()
```

#### Visualizing distribution

```{r}

h1 <- hunt_3_cleaned_data_cont_var |> 
  ggplot(aes(x = pa_min_per_week)) +
  geom_histogram()

h2 <- hunt_3_cleaned_data_cont_var |>
  filter(pa_min_per_week > 0) |> 
  ggplot(aes(x = pa_min_per_week)) +
  geom_histogram()

patchwork::wrap_plots(h1, h2)

hunt_3_cleaned_data_cont_var |> 
  count(pa_min_per_week)
```

#### Run Cox models

Crude:

```{r}

hunt_3_cox_reg_crude_cont_var <- run_cox_reg_crude(
  hunt_3_cleaned_data_cont_var,
  strata = NULL,
  pa_var = "pa_min_per_week"
)
```

Multi-adjusted:

```{r}

hunt_3_cox_reg_multi_cont_var <- run_cox_reg_multi(
  hunt_3_cleaned_data_cont_var,
  strata = NULL,
  pa_var = "pa_min_per_week"
)
```

## HUNT 4 - Survival Analysis

### LTPA index variable

#### Process data

```{r}

hunt_4_cleaned_data_ltpa_index <- hunt_4_cleaned_full_data |> 
  process_hunt_4_no_change_ltpa_index()
```

#### Visualizing distribution

```{r}

h1 <- hunt_4_cleaned_data_ltpa_index |> 
  ggplot(aes(x = ltpa_index)) +
  geom_histogram()

h2 <- hunt_4_cleaned_data_ltpa_index |>
  filter(ltpa_index > 0) |> 
  ggplot(aes(x = ltpa_index)) +
  geom_histogram()

patchwork::wrap_plots(h1, h2)

hunt_4_cleaned_data_ltpa_index |> 
  count(ltpa_index)
```

#### Run Cox models

```{r}

hunt_4_cox_reg_crude_ltpa_index <- run_cox_reg_crude(
  hunt_4_cleaned_data_ltpa_index,
  strata = NULL,
  pa_var = "ltpa_index"
)
```

```{r}

hunt_4_cox_reg_multi_ltpa_index <- run_cox_reg_multi(
  hunt_4_cleaned_data_ltpa_index,
  strata = NULL,
  pa_var = "ltpa_index"
)
```

### Quasi-continuous variable

#### Process data

```{r}

hunt_4_cleaned_data_cont_var <- hunt_4_cleaned_full_data |> 
  process_hunt_4_no_change_cont_var()
```

#### Visualizing distribution

```{r}

h1 <- hunt_4_cleaned_data_cont_var |> 
  ggplot(aes(x = pa_min_per_week)) +
  geom_histogram()

h2 <- hunt_4_cleaned_data_cont_var |>
  filter(pa_min_per_week > 0) |> 
  ggplot(aes(x = pa_min_per_week)) +
  geom_histogram()

patchwork::wrap_plots(h1, h2)

hunt_4_cleaned_data_cont_var |> 
  count(pa_min_per_week)
```

#### Run Cox models

Crude:

```{r}

hunt_4_cox_reg_crude_cont_var <- run_cox_reg_crude(
  hunt_4_cleaned_data_cont_var,
  strata = NULL,
  pa_var = "pa_min_per_week"
)
```

Multi-adjusted:

```{r}

hunt_4_cox_reg_multi_cont_var <- run_cox_reg_multi(
  hunt_4_cleaned_data_cont_var,
  strata = NULL,
  pa_var = "pa_min_per_week"
)
```

## Summary statistics from the models

### Crude model

#### Create vectors with data frames and covariates

```{r}

# Create a vector of the dataframes 

dataframes <- c(
  "hunt_1_cleaned_data", 
  "hunt_2_cleaned_data", 
  "hunt_3_cleaned_data", 
  "hunt_4_cleaned_data"
)

# Create vector of the covariates for the multi-adjusted model

crude_covariates <- c(
  "follow_up_time_in_years", 
  "death_all_cause", 
  "age", 
  "pa_hrs_per_week"
)
```

#### Compute summary statistics

```{r}

# Number of participants

calculate_num_of_participants(
  dataframes = dataframes,
  covariates = crude_covariates
)
```

```{r}

# Person-years follow-up

calculate_person_years_follow_up(
  dataframes = dataframes, 
  covariates = crude_covariates
)
```

```{r}

# Number of deaths

calculate_num_of_deaths(
  dataframes = dataframes,
  covariates = crude_covariates
)
```

### Multi-adjusted model

#### Create vectors with data frames and covariates

```{r}

# Create vector of the covariates for the multi-adjusted model

multi_adjusted_covariates <- c(
  "age", 
  "pa_hrs_per_week", 
  "follow_up_time_in_years", 
  "death_all_cause", 
  "bp_systolic",
  "bmi", 
  "smo_status", 
  "sex", 
  "alcohol_usage"
)

# We're re-using the data frames vector created for the crude model
```

```{r}

# Number of participants

calculate_num_of_participants(
  dataframes = dataframes,
  covariates = multi_adjusted_covariates
)
```

```{r}

# Person-years follow-up

calculate_person_years_follow_up(
  dataframes = dataframes, 
  covariates = multi_adjusted_covariates
)
```

```{r}

# Number of deaths

calculate_num_of_deaths(
  dataframes = dataframes,
  covariates = multi_adjusted_covariates
)
```

### Combine all data from the models in a tibble

This is done for readability.

```{r}


tibble(
  survey = c("HUNT 1", "HUNT 2", "HUNT 3", "HUNT 4"),
  number_of_participants = c(33926,50931, 36118, 38430),
  num_of_deaths = c(17011, 13992, 4024, 405),
  person_years_follow_up = c(931806, 1093581, 458556, 102768),
  incidence_rate = (num_of_deaths) / (person_years_follow_up) * 1000,
  multi_hr = c(1.040, 0.946, 0.948, 0.881),
  ci_low = c(1.030, 0.933, 0.928, 0.822),
  ci_high = c(1.050, 0.958, 0.968, 0.945)
)

# Crude model

tibble(
  survey = c("HUNT 1", "HUNT 2", "HUNT 3", "HUNT 4"),
  number_of_participants = c(35080, 54397, 38456, 44627),
  num_of_deaths = c(17984, 15362, 4705, 604),
  person_years_follow_up = c(953010, 1160780, 485785, 119545),
  incidence_rate = (num_of_deaths) / (person_years_follow_up) * 1000,
  crude_hr = c(1.070, 0.920, 0.951, 0.846),
  ci_low = c(1.060, 0.909, 0.932, 0.797),
  ci_high = c(1.080, 0.932, 0.970, 0.898)
)
```
